#include <stdio.h>
#include <iostream>
#include <time.h>
#include <locale.h>

void main()
{
	srand(time(NULL));
	setlocale(LC_ALL, "");

	/*
	Написать, программу, которая вычисляет прибыль фирмы за 6 месяцев. 
	Пользователь вводит прибыль фирмы за каждый месяц.
	*/
	/*int a[6][2] = { 0 }, month = 10, sum = 0;
	for (size_t i = 0; i < 6; i++)
	{
		for (size_t j = 0; j < 2; j++)
		{
			if (month == 13)
			{
				month = 1;
			}

			a[i][0] = month++;
			a[i][1] = 1 + rand() % 10000;
		}
	}
	for (size_t i = 0; i < 6; i++)
	{
		for (size_t j = 0; j < 2; j++)
		{
			sum += a[i][1];
		}
	}
	printf("sum = %d\n", sum);*/

	/*
	Написать программу, которая выводит одномерный массив в обратном порядке
	*/
	/*int arr[10] = { 0 };
	for (size_t i = 0; i < 10; i++)
	{
		arr[i] = 1 + rand() % 100;
	}
	for (size_t i = 9; i <-1 ; i--)
	{
		printf("arr[%d]\n", arr[i]);
	}*/

	/*
	Пользователь вводит прибыль фирмы за год (12 месяцев).
	Необходимо определить месяц, в котором прибыль была максимальна и месяц, 
	в котором прибыль была минимальна.
	*/

	/*int a[12][2] = { 0 }, month = 10, sum = 0, max = 0;
	for (size_t i = 0; i < 12; i++)
	{
		for (size_t j = 0; j < 2; j++)
		{
			if (month == 13)
			{
				month = 1;
			}

			a[i][0] = month++;
			a[i][1] = 1 + rand() % 10000;
		}
	}
	for (size_t i = 0; i < 12; i++)
	{
		for (size_t j = 0; j < 2; j++)
		{
			sum += a[i][1];
		}
	}
	

	int maxM = 0;
	int min = 10;
	int minM = 0;
	for (size_t i = 0; i < 12; i++)
	{
		for (size_t j = 0; j < 2; j++)
		{
			if (max < a[i][1])
			{
				max = a[i][1];
				maxM = a[i][0];
			}
			if (min > a[i][1])
			{
				min = a[i][1];
				minM = a[1][0];
			}
		}
	}

	printf("Месяц - %d, в котором прибыль - %d была минимальна\n", minM, min);
	printf("Месяц - %d, в котором прибыль - %d была максимальна\n", maxM, max);
	printf("sum = %d\n", sum);*/
	
	/*
	В одномерном массиве, состоящем из N вещественных чисел вычислить:
•	Сумму отрицательных элементов.
•	Произведение элементов, находящихся между min и max элементами.
•	Произведение элементов с четными номерами.
•	Сумму  элементов, находящихся между первым и последним отрицательными элементами.
	*/
	
	/*int x[10] = { 0 }, sum = 0, min = -10, max = 0, proizv = 1, proizv2 = 1;
	for (size_t i = 0; i < 10; i++)
	{
		x[i] = -100 + rand() % 200;
	}
	for (size_t i = 0; i < 10; i++)
	{
		if (x[i] < 0)
		{
			sum = sum + x[i];
		}
	}
	for (size_t i = 0; i < 10; i++)
	{
		if (max < x[i])
			max = x[i];
		if (min > x[i])
			min = x[i];
	}
	for (size_t i = min; i < max; i++)
	{
		proizv = proizv * x[i];
	}

	for (size_t i = 0; i < 10; i = i + 2)
	{
		proizv2 = proizv2 * x[i];
	}

	printf("sum = %d\n", sum);
	printf("proizv = %d\n", proizv);
	printf("proizv2 = %d\n", proizv2);*/

	/*
	Написать программу, выполняющую сортировку одномерного массива целых чисел методом пузырька.
	*/

	/*int x[10] = { 0 };
	for (size_t i = 0; i < 10; i++)
	{
		x[i] = 1 + rand() % 100;
	}
	for (int i = 0; i < 10; ++i) {
		for (int j = 10 - 1; j > i; --j) {
			if (x[j] < x[j - 1]) {
				int t = x[j - 1];
				x[j - 1] = x[j];
				x[j] = t;
			}
		}
	}
	for (size_t i = 0; i < 10; i++)
	{
		printf("x[%d]=%d\n",i,x[i]);
	}*/
	
	/*
	Написать программу «успеваемость». Пользователь вводит 10 оценок студента. 
	Реализовать меню для пользователя
a)	вывод оценок (вывод содержимого массива)
b)	пересдача экзамена (пользователь вводит номер элемента массива и новую оценку)
c)	выходит ли стипендия (стипендия выходит, если средний бал не ниже 10.7) 
	*/
	
	/*int x[10] = { 0 }, a;
float srednball = 0;
	for (size_t i = 0; i < 10; i++)
	{
		printf("Введите оценку: ");
		scanf_s("%d", &a);
		srednball += a;

		printf("x[%d] = %d\n", i, a);
	}
	
	srednball = srednball / (float)10;
		if (srednball > 10.7)
		{
			printf("Ура!Стипендия!");
		}
		else
		{
			printf("Стипендии нет!");
		}*/

	/*
	Напишите программу,
	которая спрашивает у пользователя IP адрес (4 цифры, каждая из которых от 0 до 255) 
	и заносит их в массив. 
	Выполнить проверку корректности введенных цифр. 
	Результат вывести в виде цифр, разделенных точкой (160.1.8.1).
	*/
	
	/*int x[4] = {0};
	for (size_t i = 0; i < 4; i++)
	{
		printf("Введите IP: ");
		scanf_s("%d", &x[i]);

		if (x[i] > 255)
		{
			printf("Введен неккоректный IP-адрес!");
		}

		
	}
	printf("%d.%d.%d.%d\n", x[0],x[1],x[2], x[3]);*/

	/*
	Написать программу, 
	которая переворачивает массив 
	(первый элемент становиться последним, второй предпоследним и т.д.)
	*/

	/*int x[10] = { 0 };
	for (size_t i = 0; i < 10; i++)
	{
		x[i] = 1 + rand() % 100;
	}
	for (int i = 1; i < 10; ++i)
	{
		for (int r = 0; r < 10 - i; r++)
		{
			if (x[r] < x[r + 1])
			{
				
				int temp = x[r];
				x[r] = x[r + 1];
				x[r + 1] = temp;
			}
		}
	}
	for (size_t i = 0; i < 10; i++)
	{
		printf("%d\n", x[i]);
	}*/


	/*
	Одномерный массив из 20 символов
	заполнить буквами английского алфавита (в алфавитном порядке)
	*/

	/*int i;
	char ch = 'a';
	for (i = 0; i < 20; i++)
	{
		printf("%c ", ch++);
	}
	printf("\n");*/

	/*
	Создайте двухмерный массив. 
	Заполните его случайными числами и покажите на экран. 
	Выполните сортировку элементов в каждой строке массива. Полученный результат покажите на экран.
	*/

	/*int x[2][3] = { 0 };
	for (size_t i = 0; i < 2; i++)
	{
		for (size_t j = 0; j < 3; j++)
		{
			x[i][j] = 1 + rand() % 100;
		}
	}
for (size_t k = 0; k < 2; k++)
{
	for (size_t r = 0; r < 3; r++)
	{
		for (int i = 0; i <= 2; i++)
		{
			for (int j = 0; j <= 3; j++)
			{
				if (x[i][j] > x[k][r])
				{
					int tmp = x[i][j];
					x[i][j] = x[k][r];
					x[k][r] = tmp;
				}
			}
		}
	}
}
	printf("Отсортированный массив: \n");
	for (int i = 0; i < 2; i++)
	{
		for (int j = 0; j < 3; j++)
		{
			printf("%d\n", x[i][j]);
		}
	}*/
	
	/*
	Заполнить двухмерный массив 8х8 значениями 0 и 1 случайным образом,
	но так, чтобы нулей было в два раза больше, чем единичек.
	*/
	
	/*int x[8][8] = { 0 };
	for (size_t i = 0; i < 8; i++)
	{
		for (size_t j = 0; j < 8; j++)
		{
			x[i][j] = 0 + rand() % 2;
			printf("%d\t", x[i][j]);
		}
	}
	printf("\n");*/

	/*
	Написать программу,
	которая заполняет двухмерный массив случайными числами
	и вычисляет сумму диагональных элементов.
	*/

	/*int x[4][4] = { 0 }, sum = 0;
	printf("\n");
	for (size_t i = 0; i < 4; i++)
	{
		for (size_t j = 0; j < 4; j++)
		{
			x[i][j] = 1 + rand() % 50;
			printf("%d\t", x[i][j]);
			
			sum = x[0][0] + x[1][1] + x[2][2] + x[3][3];
		}
	}
	printf("\n");
	printf("sum = %d\n", sum);*/



	system("pause");
}